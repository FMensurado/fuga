
# Coverage Testing

Right now, unit testing is complete (afaik). However, although test.h
contains things that will be useful for test-coverage testing, we still
don't have a tool to do so. It would be convenient to modify tools/test
to enable something like

    $ tools/test --coverage module_name

# Additional flags for tools/make

Some flags would make tools/make even more useful than it is now.

    $ tools/make --rebuild ...

Would rebuild a module and all of its dependencies, even if they didn't
need to be built normally.

    $ tools/make -DFOOBAR ...

Sets a macro/flag and rebuilds all dependencies using that macro. Note
that when using this option, all of the binary files need to be kept
separate from the original binaries. The result of -DFOOBAR will be
universally different (potentially), so mixing -DRELEASE with -DTESTING
is a bad idea.

# Benchmarking

Speed is important in programming langauge interpreters (which this is,
ultimately). If we want to compete in the area of speed (IF!), we need
something to automate benchmarking, such as

    $ tools/time function_name


